class Boss1(pg.sprite.Sprite): # the first boss
    def __init__(self, bosses, all_sprites):
        pg.sprite.Sprite.__init__(self)
        self.image = enemy_image
        self.rect = self.image.get_rect()
        self.pos_x = 1900
        self.all_sprites = all_sprites
        self.bosses = bosses
        self.hp = 100
        self.pos_y = random.randint(10,1200)
        self.speed = random.randint(1,2)
        self.current_frame = 0  
        self.last_update = 0
        self.standing_frames = [boss1_image, boss1_image2]
        self.ammo = 90
boss1 = Boss1(bosses, all_sprites)
boss1.take_dmg(10)

    def initi8(self, bosses, all_sprites):    
        self.image = enemy_image
        self.rect = self.image.get_rect()
        self.pos_x = 1900
        self.all_sprites = all_sprites
        self.bosses = bosses
        self.hp = 100
        self.pos_y = random.randint(10,1200)
        self.speed = random.randint(1,2)
        self.current_frame = 0  
        self.last_update = 0
        self.standing_frames = [boss1_image, boss1_image2]
        self.ammo = 90
        
        
    def take_dmg(self, dmg):
        self.hp -= dmg
        print("boss hp:", self.hp)
        if self.hp <= 0:
            self.kill()

    def update(self):
        self.animate()
        self.pos_x -= self.speed
        self.rect.centerx = self.pos_x
        self.rect.centery = self.pos_y
        if self.pos_x < -100:
            self.kill()
       

            

    def animate(self):
        now = pg.time.get_ticks()       
        if now - self.last_update > 100:   
            self.last_update = now
            self.current_frame = (self.current_frame + 1) % len(self.standing_frames)
            self.image = self.standing_frames[self.current_frame]
            self.rect = self.image.get_rect()
    
    def boomer(self):
        self.kill()

if score == 50000:
        score -= 1
        new_enemy = Boss1(all_sprites, bosses)
        bosses.add(new_enemy)
        
    if score == 49999:
        Boss1.initi8(Boss1, bosses, all_sprites)


    if len(enemy_sprites) < 20:
        if score < 100000:
            randomness = random.randint(1,8) 
            if randomness == 1:
                new_enemy = Enemy()
                enemy_sprites.add(new_enemy)
            if randomness == 2:
                new_enemy = Enemy2()
                enemy_sprites.add(new_enemy)
            if randomness == 3:
                new_enemy = Enemy3()
                enemy_sprites.add(new_enemy)
            if randomness == 4:
                new_enemy = Enemy5()
                enemy_sprites.add(new_enemy)
            if randomness == 5:
                new_enemy = Enemy6()
                enemy_sprites.add(new_enemy)
            if randomness == 6:
                new_enemy = Enemy8()
                enemy_sprites.add(new_enemy)
            if randomness == 7:
                new_enemy = Enemy7()
                enemy_sprites.add(new_enemy)
            if randomness == 8:
                new_enemy = Enemy9()
                enemy_sprites.add(new_enemy)

    if len(enemy_sprites) < 20:
        if score < 100000:
            if pattern == 0:
                pattern = random.randint(1,3) 
            else:
                if pattern == 1:
                    if pattern_e < 10:
                        new_enemy = Enemy()
                        enemy_sprites.add(new_enemy)
                    if pattern_e >= 10:
                        new_enemy = Enemy8()
                        enemy_sprites.add(new_enemy)
                    pattern_e += 1
                    if pattern_e == 20:
                        pattern = 0
                        pattern_e = 0
                if pattern == 2:
                    if pattern_e < 7:
                        new_enemy = Enemy2()
                        enemy_sprites.add(new_enemy)
                    if pattern_e >= 7:
                        new_enemy = Enemy9()
                        enemy_sprites.add(new_enemy)
                    pattern_e += 1
                    if pattern_e == 15:
                        pattern = 0
                        pattern_e = 0
                if pattern == 3:
                    if pattern_e < 7:
                        new_enemy = Enemy3()
                        enemy_sprites.add(new_enemy)
                    if pattern_e >= 6 and pattern_e < 15:
                        new_enemy = Enemy8()
                        enemy_sprites.add(new_enemy)
                    if pattern_e > 9:
                        new_enemy = Enemy3()
                        enemy_sprites.add(new_enemy)
                    pattern_e += 1
                    if pattern_e == 25:
                        pattern = 0
                        pattern_e = 0
                if pattern == 4:
                    if pattern_e < 7:
                        new_enemy = Enemy5()
                        enemy_sprites.add(new_enemy)
                    if pattern_e >= 7 and pattern_e < 16:
                        new_enemy = Enemy9()
                        enemy_sprites.add(new_enemy)
                    if pattern_e > 15:
                        new_enemy = Enemy5()
                        enemy_sprites.add(new_enemy)
                    pattern_e += 1
                    if pattern_e == 40:
                        pattern = 0
                        pattern_e = 0




class Wroomba(pg.sprite.Sprite): #secret boss
    def __init__(self):
        pg.sprite.Sprite.__init__(self)
        self.image = roomba_image
        self.rect = self.image.get_rect()
        self.pos_x = 1900
        self.pos_y = random.randint(10,1200)
        self.speed = 1
        self.hp = 500
        self.tick = 500

    def update(self):
        if self.tick == 0:
            self.speed += 1
            self.pos_x -= self.speed
            self.rect.centerx = self.pos_x
            self.rect.centery = self.pos_y
            if self.pos_x < -100:
                self.speed = 0
                self.tick = 500
                self.pos_x = 1900
        else:
            self.pos_y += random.randint(-1, 1)
            self.tick -= 1
    
    def take_dmg(self, dmg):
        self.hp -= dmg
        if self.hp < 1:
            self.kill()


 hits = pg.sprite.groupcollide(bullets, wroomba, True, False)
    if hits:
        Wroomba.take_dmg(5, 5)
    
    hits = pg.sprite.groupcollide(bullets2, wroomba, True, False)
    if hits:
        Wroomba.take_dmg(5, 5)


 keys = pg.key.get_pressed()
    if keys[pg.K_p] and bosshp == 0 : # oppover
        new_enemy = Wroomba()
        wroomba.add(new_enemy)     
        bosshp = 2